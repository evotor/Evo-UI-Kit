@use "sass:math";
@import '../../../styles/mixins.scss';

$className: '.segmented-button';
$itemHeight: $distance-medium;
$counterHeight: 20px;

#{$className} {
    display: inline-block;

    &__view {
        display: inline-block;
        padding: 0 20px;
        color: $color-link;
        line-height: $itemHeight;
        background-color: transparent;
        border-radius: math.div($itemHeight, 2);
        user-select: none;
    }

    &__view-text {
        position: relative;
        z-index: 1;
        display: flex;
        flex-wrap: nowrap;
        align-items: center;
        white-space: nowrap;

        ::ng-deep [data-type='counter'] {
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            min-width: $counterHeight;
            margin-left: 10px;
            padding: 0 4px;
            color: $color-white;
            font-weight: bold;
            font-size: math.div($counterHeight, 2);
            line-height: math.div($counterHeight, 2);
        }
        ::ng-deep [data-type='counter']:after {
            position: absolute;
            top: 46%;
            left: 0;
            z-index: -1;
            display: block;
            box-sizing: border-box;
            width: 100%;
            height: $counterHeight;
            text-align: center;
            background-color: $color-primary;
            border-radius: math.div($counterHeight, 2);
            transform: translateY(-48%);
            content: '';
        }
    }

    &__input {
        position: absolute;
        display: none;
    }

    &__view,
    &__view-counter {
        transition: background-color 0.15s, color 0.15s, padding 0.15s;
    }

    // checked item
    &__input:checked + &__view {
        padding: 0 20px;
        color: $color-white;
        background-color: $color-link;

        #{$className}__view-text {
            ::ng-deep [data-type='counter'] {
                color: $color-primary;
            }
            ::ng-deep [data-type='counter']:after {
                background-color: $color-white;
            }
        }
    }

    // disabled items
    &__input:disabled + &__view {
        color: $color-white;
        background-color: $color-disabled;
        cursor: default;
    }

    // Colors
    &_grey {
        #{$className}__view {
            background-color: $color-background-grey;
        }

        #{$className}__input:not(:disabled) + #{$className}__view:hover {
            background-color: $color-grey-hover;
        }

        #{$className}__input:not(:disabled) + #{$className}__view:active {
            background-color: $color-grey-active;
        }

        #{$className}__input:checked:not(:disabled) + #{$className}__view:hover {
            background-color: $color-link-hover;
        }

        #{$className}__input:checked:not(:disabled) + #{$className}__view:active {
            background-color: $color-link-active;
        }
    }

    &_white {
        #{$className}__view {
            background-color: $color-white;
        }

        #{$className}__input:not(:disabled) + #{$className}__view:hover {
            background-color: $color-white-hover;
        }

        #{$className}__input:not(:disabled) + #{$className}__view:active {
            background-color: $color-grey-active;
        }

        #{$className}__input:checked:not(:disabled) + #{$className}__view:hover {
            background-color: $color-link-hover;
        }

        #{$className}__input:checked:not(:disabled) + #{$className}__view:active {
            background-color: $color-link-active;
        }
    }
}
