name: ðŸ”„ CI

on:
  push:
    branches:
      - master
      - beta
      - alpha
      - '[0-9]+.x'
      - '[0-9]+.[0-9]+.x'
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  install:
    runs-on: ubuntu-latest

    outputs:
      NODE_VERSION: ${{ steps.nvm.outputs.NODE_VERSION }}

    steps:
      - name: Begin CI...
        uses: actions/checkout@v4

      - name: Read .nvmrc
        run: ver="$(cat .nvmrc)"; echo "NODE_VERSION=$ver" >> $GITHUB_OUTPUT
        id: nvm

      - name: Setup node (.nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.nvm.outputs.NODE_VERSION }}'

      - uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ steps.nvm.outputs.NODE_VERSION }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

  lint:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Start linting...
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ needs.install.outputs.NODE_VERSION }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Start testing...
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ needs.install.outputs.NODE_VERSION }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Pull Angular cli Karma
        run: docker pull trion/ng-cli-karma:12.2.12

      - name: Run unit tests
        run: |
          docker run --rm \
            -w ${GITHUB_WORKSPACE} \
            -v ${GITHUB_WORKSPACE}:${GITHUB_WORKSPACE} \
            trion/ng-cli-karma:12.2.12 \
            npm run test:ci;

  build:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Start building...
        uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ needs.install.outputs.NODE_VERSION }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Build
        run: npm run build
